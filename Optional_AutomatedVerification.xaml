<Activity mc:Ignorable="sap sap2010 sads" x:Class="Login" mva:VisualBasic.Settings="{x:Null}" sap2010:WorkflowViewState.IdRef="Login_1"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.PDF</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="This workflow logs to ELIS using credentials provided in 'credentials.json'. It can validate imported documents based on the logic provided in 'Automatic Verification' (see placeholder). Without providing the customized logic, this workflow validates all documents by default. " DisplayName="Optional_AutomatedVerification" sap2010:WorkflowViewState.IdRef="Sequence_2">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Default="https://api.elis.rossum.ai/v1" Name="Endpoint" />
      <Variable x:TypeArguments="x:String" Name="loginID" />
    </Sequence.Variables>
    <Sequence DisplayName="Login" sap2010:WorkflowViewState.IdRef="Sequence_3">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="loginJson" />
        <Variable x:TypeArguments="njl:JObject" Name="objJson" />
      </Sequence.Variables>
      <ui:ReadTextFile Content="[loginJson]" DisplayName="Read Text File" FileName="[Environment.CurrentDirectory +&quot;\credentials.json&quot;]" sap2010:WorkflowViewState.IdRef="ReadTextFile_1" />
      <ui:Replace DisplayName="Replace ' for &quot;" sap2010:WorkflowViewState.IdRef="Replace_4" Input="[loginJson]" Pattern="[Chr(39)]" RegexOption="IgnoreCase, Compiled" Replacement="[Chr(34)]" Result="[loginJson]" />
      <ui:HttpClient ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseHeaders="{x:Null}" StatusCode="{x:Null}" Username="{x:Null}" AcceptFormat="ANY" Body="[loginJson]" BodyFormat="application/json" DisplayName="HTTP Request - LOGIN" EndPoint="[Endpoint + &quot;/auth/login&quot;]" sap2010:WorkflowViewState.IdRef="HttpClient_1" Method="POST" Result="[loginID]" TimeoutMS="20000">
        <ui:HttpClient.Attachments>
          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
        </ui:HttpClient.Attachments>
        <ui:HttpClient.Headers>
          <InArgument x:TypeArguments="x:String" x:Key="Content-Type">application/json</InArgument>
        </ui:HttpClient.Headers>
        <ui:HttpClient.Parameters>
          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
        </ui:HttpClient.Parameters>
        <ui:HttpClient.UrlSegments>
          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
        </ui:HttpClient.UrlSegments>
      </ui:HttpClient>
      <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_1" JsonObject="[objJson]" JsonString="[loginID]" />
      <Assign sap2010:WorkflowViewState.IdRef="Assign_5">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[loginID]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[objJson("key").ToString]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_18" Level="Info" Message="[&quot;Account logged in&quot;]" />
    </Sequence>
    <Sequence DisplayName="Automatic Verification" sap2010:WorkflowViewState.IdRef="Sequence_10">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="authKey" />
        <Variable x:TypeArguments="x:String" Name="ResultJSON" />
        <Variable x:TypeArguments="njl:JObject" Name="objJSON" />
        <Variable x:TypeArguments="s:String[]" Name="fieldsToExtract" />
        <Variable x:TypeArguments="x:String" Name="tableHeader" />
        <Variable x:TypeArguments="sd:DataTable" Name="DT_Invoices" />
        <Variable x:TypeArguments="scg:ICollection(x:String)" Name="DocURLs" />
      </Sequence.Variables>
      <Sequence DisplayName="Create authKey and LIST docs" sap2010:WorkflowViewState.IdRef="Sequence_13">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:String" Name="JsonQueues" />
          <Variable x:TypeArguments="njl:JObject" Name="JsonObjQueue" />
          <Variable x:TypeArguments="x:String" Name="QueueID" />
        </Sequence.Variables>
        <Assign DisplayName="Create Authorization Key" sap2010:WorkflowViewState.IdRef="Assign_6">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[authKey]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">Token LOGIN_ID</InArgument>
          </Assign.Value>
        </Assign>
        <ui:Replace DisplayName="Insert LoginID to authKey" sap2010:WorkflowViewState.IdRef="Replace_3" Input="[authKey]" Pattern="LOGIN_ID" RegexOption="IgnoreCase, Compiled" Replacement="[loginID]" Result="[authKey]" />
        <ui:HttpClient Body="{x:Null}" ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseHeaders="{x:Null}" StatusCode="{x:Null}" Username="{x:Null}" AcceptFormat="ANY" sap2010:Annotation.AnnotationText="" BodyFormat="application/json" DisplayName="HTTP Request - LIST QUEUES" EndPoint="[Endpoint +&quot;/queues&quot;]" sap2010:WorkflowViewState.IdRef="HttpClient_11" Method="GET" Result="[JsonQueues]" TimeoutMS="20000">
          <ui:HttpClient.Attachments>
            <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
          </ui:HttpClient.Attachments>
          <ui:HttpClient.Headers>
            <InArgument x:TypeArguments="x:String" x:Key="Authorization">[authKey]</InArgument>
          </ui:HttpClient.Headers>
          <ui:HttpClient.Parameters>
            <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
          </ui:HttpClient.Parameters>
          <ui:HttpClient.UrlSegments>
            <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
          </ui:HttpClient.UrlSegments>
        </ui:HttpClient>
        <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_4" JsonObject="[JsonObjQueue]" JsonString="[JsonQueues]" />
        <Assign DisplayName="Get Queue ID" sap2010:WorkflowViewState.IdRef="Assign_12">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[QueueID]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[JsonObjQueue("results")(0)("id").ToString]</InArgument>
          </Assign.Value>
        </Assign>
        <DoWhile DisplayName="Wait While Processing" sap2010:WorkflowViewState.IdRef="DoWhile_1">
          <DoWhile.Variables>
            <Variable x:TypeArguments="x:Boolean" Name="StillProcessing" />
            <Variable x:TypeArguments="x:Int32" Default="0" Name="WaitCounter" />
            <Variable x:TypeArguments="x:Int32" Name="ImportingFilesCount" />
          </DoWhile.Variables>
          <DoWhile.Condition>[ImportingFilesCount &lt;&gt; 0]</DoWhile.Condition>
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_15">
            <ui:HttpClient Body="{x:Null}" ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseHeaders="{x:Null}" StatusCode="{x:Null}" Username="{x:Null}" AcceptFormat="ANY" sap2010:Annotation.AnnotationText="Default queue = fixed value?" BodyFormat="multipart/json" DisplayName="HTTP Request - LIST Importing Docs" EndPoint="[Endpoint + &quot;/annotations?page_size=50&amp;status=importing&amp;queue=&quot;+ QueueID]" sap2010:WorkflowViewState.IdRef="HttpClient_12" Method="GET" Result="[ResultJSON]" TimeoutMS="20000">
              <ui:HttpClient.Attachments>
                <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
              </ui:HttpClient.Attachments>
              <ui:HttpClient.Headers>
                <InArgument x:TypeArguments="x:String" x:Key="Authorization">[authKey]</InArgument>
              </ui:HttpClient.Headers>
              <ui:HttpClient.Parameters>
                <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
              </ui:HttpClient.Parameters>
              <ui:HttpClient.UrlSegments>
                <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
              </ui:HttpClient.UrlSegments>
            </ui:HttpClient>
            <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_5" JsonObject="[objJSON]" JsonString="[ResultJSON]" />
            <Assign sap2010:WorkflowViewState.IdRef="Assign_20">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[ImportingFilesCount]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[objJSON("results").Count]</InArgument>
              </Assign.Value>
            </Assign>
            <If Condition="[WaitCounter=0 AND ImportingFilesCount&lt;&gt;0]" DisplayName="Log waiting time notice" sap2010:WorkflowViewState.IdRef="If_7">
              <If.Then>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_16">
                  <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_13" Level="Info" Message="[&quot;Waiting for &quot;+ImportingFilesCount.ToString+&quot; document(s) being imported...&quot;]" />
                </Sequence>
              </If.Then>
            </If>
            <Assign DisplayName="Increase WaitCounter" sap2010:WorkflowViewState.IdRef="Assign_17">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[WaitCounter]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[WaitCounter+1]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:CommentOut DisplayName="Comment Out" sap2010:WorkflowViewState.IdRef="CommentOut_1">
              <ui:CommentOut.Body>
                <Sequence DisplayName="Ignored Activities" sap2010:WorkflowViewState.IdRef="Sequence_17">
                  <If Condition="[WaitCounter mod 5 = 0]" DisplayName="Log waiting time" sap2010:WorkflowViewState.IdRef="If_8">
                    <If.Then>
                      <ui:LogMessage DisplayName="Log Waiting time" sap2010:WorkflowViewState.IdRef="LogMessage_14" Level="Info" Message="[WaitCounter.ToString + &quot;s&quot;]" />
                    </If.Then>
                  </If>
                </Sequence>
              </ui:CommentOut.Body>
            </ui:CommentOut>
            <Delay Duration="00:00:01" sap2010:WorkflowViewState.IdRef="Delay_2" />
          </Sequence>
        </DoWhile>
        <ui:HttpClient Body="{x:Null}" ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseHeaders="{x:Null}" StatusCode="{x:Null}" Username="{x:Null}" AcceptFormat="ANY" sap2010:Annotation.AnnotationText="Default queue = fixed value?" BodyFormat="multipart/json" DisplayName="HTTP Request - LIST DOCS" EndPoint="[Endpoint + &quot;/annotations?status=to_review&amp;page_size=50&amp;queue=&quot;+ QueueID]" sap2010:WorkflowViewState.IdRef="HttpClient_5" Method="GET" Result="[ResultJSON]" TimeoutMS="20000">
          <ui:HttpClient.Attachments>
            <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
          </ui:HttpClient.Attachments>
          <ui:HttpClient.Headers>
            <InArgument x:TypeArguments="x:String" x:Key="Authorization">[authKey]</InArgument>
          </ui:HttpClient.Headers>
          <ui:HttpClient.Parameters>
            <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
          </ui:HttpClient.Parameters>
          <ui:HttpClient.UrlSegments>
            <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
          </ui:HttpClient.UrlSegments>
        </ui:HttpClient>
        <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_2" JsonObject="[objJSON]" JsonString="[ResultJSON]" />
        <If Condition="[ResultJSON.ToString.Contains(&quot;authentication_failed&quot;)]" DisplayName="Stop if wrong credentials " sap2010:WorkflowViewState.IdRef="If_1">
          <If.Then>
            <Throw Exception="[New Exception(&quot;Wrong credentials&quot;)]" sap2010:WorkflowViewState.IdRef="Throw_1" />
          </If.Then>
        </If>
        <Sequence DisplayName="Create DT to store data" sap2010:WorkflowViewState.IdRef="Sequence_11">
          <Assign DisplayName="Define fieldsToExtract" sap2010:WorkflowViewState.IdRef="Assign_8">
            <Assign.To>
              <OutArgument x:TypeArguments="s:String[]">[fieldsToExtract]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="s:String[]">[{"elis_url","invoice_id", "order_id", "date_issue", "amount_total_tax", "amount_total_base", "sender_name", "sender_dic", "recipient_name"}]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap2010:WorkflowViewState.IdRef="Assign_9">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[tableHeader]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[String.Join(",", fieldsToExtract)]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:BuildDataTable DataTable="[DT_Invoices]" DisplayName="Build data table" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Invoice_x0020_Name&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Invoice_x0020_Path&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Elis_x0020_Invoice_x0020_ID&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
          <ui:GenerateDataTable ColumnSizes="{x:Null}" NewLineSeparator="{x:Null}" Positions="{x:Null}" AutoDetectTypes="False" CSVParsing="False" ColumnSeparators="," DataTable="[DT_Invoices]" DisplayName="Generate Data Table" sap2010:WorkflowViewState.IdRef="GenerateDataTable_1" Input="[tableHeader]" UseColumnHeader="True" />
        </Sequence>
        <Assign DisplayName="Initialize DocURLs" sap2010:WorkflowViewState.IdRef="Assign_7">
          <Assign.To>
            <OutArgument x:TypeArguments="scg:ICollection(x:String)">[DocURLs]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="scg:ICollection(x:String)">[new List(of string)]</InArgument>
          </Assign.Value>
        </Assign>
      </Sequence>
      <ui:ForEach x:TypeArguments="njl:JObject" CurrentIndex="{x:Null}" DisplayName="For Each Doc" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[objJSON(&quot;results&quot;)]">
        <ui:ForEach.Body>
          <ActivityAction x:TypeArguments="njl:JObject">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="njl:JObject" Name="URL" />
            </ActivityAction.Argument>
            <Sequence sap2010:Annotation.AnnotationText="" DisplayName="Extract values and decide if to be verified" sap2010:WorkflowViewState.IdRef="Sequence_9">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:Boolean" Name="ConfirmDoc" />
              </Sequence.Variables>
              <ui:ClearDataTable DataTable="[DT_Invoices]" DisplayName="Clear Data Table" sap2010:WorkflowViewState.IdRef="ClearDataTable_1" />
              <Sequence DisplayName="Extract values" sap2010:WorkflowViewState.IdRef="Sequence_7">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:String" Name="ResultJSON2" />
                  <Variable x:TypeArguments="njl:JObject" Name="objJSON2" />
                  <Variable x:TypeArguments="scg:ICollection(x:String)" Name="fieldsToWrite" />
                </Sequence.Variables>
                <ui:HttpClient Body="{x:Null}" ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseHeaders="{x:Null}" StatusCode="{x:Null}" Username="{x:Null}" AcceptFormat="ANY" sap2010:Annotation.AnnotationText="" BodyFormat="multipart/json" DisplayName="HTTP Request - GET DOC DATA" EndPoint="[URL(&quot;content&quot;).ToString]" sap2010:WorkflowViewState.IdRef="HttpClient_6" Method="GET" Result="[ResultJSON2]" TimeoutMS="20000">
                  <ui:HttpClient.Attachments>
                    <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                  </ui:HttpClient.Attachments>
                  <ui:HttpClient.Headers>
                    <InArgument x:TypeArguments="x:String" x:Key="Authorization">[authKey]</InArgument>
                  </ui:HttpClient.Headers>
                  <ui:HttpClient.Parameters>
                    <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                  </ui:HttpClient.Parameters>
                  <ui:HttpClient.UrlSegments>
                    <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                  </ui:HttpClient.UrlSegments>
                </ui:HttpClient>
                <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_3" JsonObject="[objJSON2]" JsonString="[ResultJSON2]" />
                <Assign sap2010:WorkflowViewState.IdRef="Assign_10">
                  <Assign.To>
                    <OutArgument x:TypeArguments="scg:ICollection(x:String)">[fieldsToWrite]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="scg:ICollection(x:String)">[new List(of String)]</InArgument>
                  </Assign.Value>
                </Assign>
                <AddToCollection x:TypeArguments="x:String" Collection="[fieldsToWrite]" DisplayName="Add  URL to fieldsToExtract" sap2010:WorkflowViewState.IdRef="AddToCollection`1_1" Item="[URL(&quot;url&quot;).ToString]" />
                <ui:ForEach x:TypeArguments="njl:JObject" CurrentIndex="{x:Null}" DisplayName="For Each Result To Extract" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[objJSON2(&quot;results&quot;)]">
                  <ui:ForEach.Body>
                    <ActivityAction x:TypeArguments="njl:JObject">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="njl:JObject" Name="result" />
                      </ActivityAction.Argument>
                      <ui:ForEach x:TypeArguments="njl:JObject" CurrentIndex="{x:Null}" DisplayName="For Each" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[result(&quot;children&quot;)]">
                        <ui:ForEach.Body>
                          <ActivityAction x:TypeArguments="njl:JObject">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="njl:JObject" Name="child" />
                            </ActivityAction.Argument>
                            <If Condition="[fieldsToExtract.Contains(child(&quot;schema_id&quot;).ToString)=True]" DisplayName="If child is fieldToExtract" sap2010:WorkflowViewState.IdRef="If_10">
                              <If.Then>
                                <Sequence DisplayName="Extract" sap2010:WorkflowViewState.IdRef="Sequence_19">
                                  <Sequence.Variables>
                                    <Variable x:TypeArguments="x:String" Name="fieldValueToWrite" />
                                  </Sequence.Variables>
                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_21">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[fieldValueToWrite]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[child("content")("value").ToString]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <AddToCollection x:TypeArguments="x:String" Collection="[fieldsToWrite]" DisplayName="Add to collection" sap2010:WorkflowViewState.IdRef="AddToCollection`1_3" Item="[fieldValueToWrite]" />
                                  <If Condition="[child(&quot;validation_sources&quot;).ToString&lt;&gt;&quot;[]&quot;]" DisplayName="If all values are verified by ELIS preserve ConfirmDoc=True" sap2010:WorkflowViewState.IdRef="If_9">
                                    <If.Else>
                                      <Assign DisplayName="Cannot confirm doc" sap2010:WorkflowViewState.IdRef="Assign_22">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Boolean">[ConfirmDoc]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </If.Else>
                                  </If>
                                </Sequence>
                              </If.Then>
                            </If>
                          </ActivityAction>
                        </ui:ForEach.Body>
                      </ui:ForEach>
                    </ActivityAction>
                  </ui:ForEach.Body>
                </ui:ForEach>
                <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[fieldsToWrite.ToArray]" DataTable="[DT_Invoices]" DisplayName="Add data row" sap2010:WorkflowViewState.IdRef="AddDataRow_1" />
              </Sequence>
              <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_1" Text="Add logic to evaluate if the document can be confirmed.&#xA;&#xA;Document information is stored in 1-row datatable 'DT_Invoices'.&#xA;Following activities mark the document based on boolean 'ConfirmDoc'." />
              <Assign DisplayName="ALWAYS VERIFY" sap2010:WorkflowViewState.IdRef="Assign_23">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Boolean">[ConfirmDoc]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                </Assign.Value>
              </Assign>
              <If Condition="[ConfirmDoc]" DisplayName="Send decision to Elis" sap2010:WorkflowViewState.IdRef="If_3">
                <If.Then>
                  <Sequence DisplayName="CONFIRM doc" sap2010:WorkflowViewState.IdRef="Sequence_12">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:String" Name="AnnotationID" />
                      <Variable x:TypeArguments="x:String" Name="MatchedFile" />
                    </Sequence.Variables>
                    <ui:HttpClient Body="{x:Null}" ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseHeaders="{x:Null}" StatusCode="{x:Null}" Username="{x:Null}" AcceptFormat="ANY" sap2010:Annotation.AnnotationText="Default queue = fixed value?" BodyFormat="multipart/json" DisplayName="HTTP Request - Set to REVIEWING" EndPoint="[URL(&quot;url&quot;).ToString + &quot;/start&quot;]" sap2010:WorkflowViewState.IdRef="HttpClient_9" Method="POST" Result="[ResultJSON]" TimeoutMS="20000">
                      <ui:HttpClient.Attachments>
                        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                      </ui:HttpClient.Attachments>
                      <ui:HttpClient.Headers>
                        <InArgument x:TypeArguments="x:String" x:Key="Authorization">[authKey]</InArgument>
                      </ui:HttpClient.Headers>
                      <ui:HttpClient.Parameters>
                        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                      </ui:HttpClient.Parameters>
                      <ui:HttpClient.UrlSegments>
                        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                      </ui:HttpClient.UrlSegments>
                    </ui:HttpClient>
                    <ui:HttpClient Body="{x:Null}" ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseHeaders="{x:Null}" StatusCode="{x:Null}" Username="{x:Null}" AcceptFormat="ANY" sap2010:Annotation.AnnotationText="Default queue = fixed value?" BodyFormat="multipart/json" DisplayName="HTTP Request - CONFIRM" EndPoint="[URL(&quot;url&quot;).ToString + &quot;/confirm&quot;]" sap2010:WorkflowViewState.IdRef="HttpClient_8" Method="POST" Result="[ResultJSON]" TimeoutMS="20000">
                      <ui:HttpClient.Attachments>
                        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                      </ui:HttpClient.Attachments>
                      <ui:HttpClient.Headers>
                        <InArgument x:TypeArguments="x:String" x:Key="Authorization">[authKey]</InArgument>
                      </ui:HttpClient.Headers>
                      <ui:HttpClient.Parameters>
                        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                      </ui:HttpClient.Parameters>
                      <ui:HttpClient.UrlSegments>
                        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                      </ui:HttpClient.UrlSegments>
                    </ui:HttpClient>
                    <Assign DisplayName="Extract Annotation" sap2010:WorkflowViewState.IdRef="Assign_25">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[AnnotationID]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[URL("id").ToString.Split("/"c).Last]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_20" Level="Info" Message="[&quot;Document automatically reviewed: &quot; + AnnotationID]" />
                  </Sequence>
                </If.Then>
                <If.Else>
                  <ui:HttpClient Body="{x:Null}" ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseHeaders="{x:Null}" StatusCode="{x:Null}" Username="{x:Null}" AcceptFormat="ANY" BodyFormat="multipart/json" DisplayName="HTTP Request - Set to CANCEL" EndPoint="[URL(&quot;url&quot;).ToString + &quot;/confirm&quot;]" sap2010:WorkflowViewState.IdRef="HttpClient_10" Method="POST" Result="[ResultJSON]" TimeoutMS="20000">
                    <ui:HttpClient.Attachments>
                      <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                    </ui:HttpClient.Attachments>
                    <ui:HttpClient.Headers>
                      <InArgument x:TypeArguments="x:String" x:Key="Authorization">[authKey]</InArgument>
                    </ui:HttpClient.Headers>
                    <ui:HttpClient.Parameters>
                      <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                    </ui:HttpClient.Parameters>
                    <ui:HttpClient.UrlSegments>
                      <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                    </ui:HttpClient.UrlSegments>
                  </ui:HttpClient>
                </If.Else>
              </If>
            </Sequence>
          </ActivityAction>
        </ui:ForEach.Body>
      </ui:ForEach>
    </Sequence>
    <Sequence DisplayName="Logout" sap2010:WorkflowViewState.IdRef="Sequence_5">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="loginJson" />
      </Sequence.Variables>
      <ui:HttpClient ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseHeaders="{x:Null}" Result="{x:Null}" StatusCode="{x:Null}" Username="{x:Null}" AcceptFormat="ANY" Body="[loginJson]" BodyFormat="application/json" DisplayName="HTTP Request - LOGOUT" EndPoint="[Endpoint + &quot;/auth/logout&quot;]" sap2010:WorkflowViewState.IdRef="HttpClient_4" Method="POST" TimeoutMS="20000">
        <ui:HttpClient.Attachments>
          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
        </ui:HttpClient.Attachments>
        <ui:HttpClient.Headers>
          <InArgument x:TypeArguments="x:String" x:Key="Content-Type">application/json</InArgument>
        </ui:HttpClient.Headers>
        <ui:HttpClient.Parameters>
          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
        </ui:HttpClient.Parameters>
        <ui:HttpClient.UrlSegments>
          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
        </ui:HttpClient.UrlSegments>
      </ui:HttpClient>
      <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_17" Level="Info" Message="[&quot;Finished validating documents.&quot;]" />
      <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_19" Level="Info" Message="[&quot;Acount logged out.&quot;]" />
    </Sequence>
    <sads:DebugSymbol.Symbol>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</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="ReadTextFile_1" sap:VirtualizedContainerService.HintSize="318,59" />
      <sap2010:ViewStateData Id="Replace_4" sap:VirtualizedContainerService.HintSize="318,22" />
      <sap2010:ViewStateData Id="HttpClient_1" sap:VirtualizedContainerService.HintSize="318,22" />
      <sap2010:ViewStateData Id="DeserializeJson`1_1" sap:VirtualizedContainerService.HintSize="318,60" />
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="318,60" />
      <sap2010:ViewStateData Id="LogMessage_18" sap:VirtualizedContainerService.HintSize="318,91" />
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_6" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Replace_3" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="HttpClient_11" sap:VirtualizedContainerService.HintSize="464,49">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="DeserializeJson`1_4" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Assign_12" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="HttpClient_12" sap:VirtualizedContainerService.HintSize="314,22">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="DeserializeJson`1_5" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_20" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_13" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_16" sap:VirtualizedContainerService.HintSize="336,215">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_7" sap:VirtualizedContainerService.HintSize="314,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_17" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_14" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="If_8" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_17" sap:VirtualizedContainerService.HintSize="486,175">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CommentOut_1" sap:VirtualizedContainerService.HintSize="314,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Delay_2" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_15" sap:VirtualizedContainerService.HintSize="336,690">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="DoWhile_1" sap:VirtualizedContainerService.HintSize="464,852">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="HttpClient_5" sap:VirtualizedContainerService.HintSize="464,22">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="DeserializeJson`1_2" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Throw_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="464,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_8" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_9" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="BuildDataTable_1" sap:VirtualizedContainerService.HintSize="314,59">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GenerateDataTable_1" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="Sequence_11" sap:VirtualizedContainerService.HintSize="464,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Sequence_13" sap:VirtualizedContainerService.HintSize="352,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ClearDataTable_1" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="HttpClient_6" sap:VirtualizedContainerService.HintSize="314,22">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="DeserializeJson`1_3" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_10" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="AddToCollection`1_1" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Assign_21" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="AddToCollection`1_3" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="Assign_22" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_9" sap:VirtualizedContainerService.HintSize="464,208" />
      <sap2010:ViewStateData Id="Sequence_19" sap:VirtualizedContainerService.HintSize="486,494">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_10" sap:VirtualizedContainerService.HintSize="611,642" />
      <sap2010:ViewStateData Id="ForEach`1_4" sap:VirtualizedContainerService.HintSize="627,776" />
      <sap2010:ViewStateData Id="ForEach`1_2" sap:VirtualizedContainerService.HintSize="314,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddDataRow_1" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_7" sap:VirtualizedContainerService.HintSize="314,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Comment_1" sap:VirtualizedContainerService.HintSize="314,170" />
      <sap2010:ViewStateData Id="Assign_23" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="HttpClient_9" sap:VirtualizedContainerService.HintSize="314,22">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="HttpClient_8" sap:VirtualizedContainerService.HintSize="314,22">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_25" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_20" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_12" sap:VirtualizedContainerService.HintSize="336,439">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="HttpClient_10" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_3" sap:VirtualizedContainerService.HintSize="314,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_9" sap:VirtualizedContainerService.HintSize="336,638">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_3" sap:VirtualizedContainerService.HintSize="352,772" />
      <sap2010:ViewStateData Id="Sequence_10" sap:VirtualizedContainerService.HintSize="374,987">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="HttpClient_4" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="LogMessage_17" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="LogMessage_19" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_5" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="222,519">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Login_1" sap:VirtualizedContainerService.HintSize="262,599" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>